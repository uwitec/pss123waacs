# Scaffolding generated by Casein v.2.0.6

class CaseinShippingAddressesController < CaseinController
 
  ## optional filters for defining usage according to casein_users access_levels
  # before_filter :needs_admin, :except => [:action1, :action2]
  # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
 
  def index
		if request.get?
			@casein_page_title = 'Shipping addresses'
			@shipping_addresses = ShippingAddress.paginate :all, :page => params[:page]
		end
  end
 
  def new
		if request.get?
			@casein_page_title = 'Add a new shipping address'
    	@shipping_address = ShippingAddress.new
		end
  end

  def create
    if request.post?
      @shipping_address = ShippingAddress.new params[:shipping_address]
      
      unless @shipping_address.save
        flash[:warning] = 'There were problems when trying to create a new shipping address'
        render :action => :new
        return
      end
      
      flash[:notice] = 'Shipping address created'
    end
    redirect_to casein_shipping_addresses_path
  end
  
  def show
		if request.get?
   	 @shipping_address = ShippingAddress.find params[:id]
    
	    if @shipping_address.nil?
	      redirect_to casein_shipping_addresses_path
	    end

			@casein_page_title = 'View shipping address'
		end
  end
 
  def update
    if request.put?
      @shipping_address = ShippingAddress.find params[:id]

      if @shipping_address
        @casein_page_title = 'Update shipping address'

        unless @shipping_address.update_attributes params[:shipping_address]
          flash[:warning] = 'There were problems when trying to update this shipping address'
          render :action => :show
          return
        end
        flash[:notice] = 'Shipping address has been updated'
      end
    end

    redirect_to casein_shipping_addresses_path
  end
 
  def destroy
    if request.delete?
      @shipping_address = ShippingAddress.find_by_id params[:id]

      if @shipping_address
        flash[:notice] = 'Shipping address has been deleted'
        @shipping_address.destroy
      end
    end

    redirect_to :back
  end
  
end