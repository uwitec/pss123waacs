# Scaffolding generated by Casein <%= casein_get_full_version_string %>

class Casein<%= controller_class_name %>Controller < CaseinController
 
  ## optional filters for defining usage according to casein_users access_levels
  # before_filter :needs_admin, :except => [:action1, :action2]
  # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
 
  def index
		if request.get?
			@casein_page_title = '<%= plural_name.humanize.capitalize %>'
			@<%= table_name %> = <%= class_name %>.paginate :all, :page => params[:page]
		end
  end
 
  def new
		if request.get?
			@casein_page_title = 'Add a new <%= singular_name.humanize.downcase %>'
    	@<%= file_name %> = <%= class_name %>.new
		end
  end

  def create
    if request.post?
      @<%= file_name %> = <%= class_name %>.new params[:<%= file_name %>]
      
      unless @<%= file_name %>.save
        flash[:warning] = 'There were problems when trying to create a new <%= singular_name.humanize.downcase %>'
        render :action => :new
        return
      end
      
      flash[:notice] = '<%= singular_name.humanize.capitalize %> created'
    end
    redirect_to casein_<%= controller_file_path %>_path
  end
  
  def show
		if request.get?
   	 @<%= file_name %> = <%= class_name %>.find params[:id]
    
	    if @<%= file_name %>.nil?
	      redirect_to casein_<%= controller_file_path %>_path
	    end

			@casein_page_title = 'View <%= singular_name.humanize.downcase %>'
		end
  end
 
  def update
    if request.put?
      @<%= file_name %> = <%= class_name %>.find params[:id]

      if @<%= file_name %>
        @casein_page_title = 'Update <%= singular_name.humanize.downcase %>'

        unless @<%= file_name %>.update_attributes params[:<%= file_name %>]
          flash[:warning] = 'There were problems when trying to update this <%= singular_name.humanize.downcase %>'
          render :action => :show
          return
        end
        flash[:notice] = '<%= singular_name.humanize.capitalize %> has been updated'
      end
    end

    redirect_to casein_<%= controller_file_path %>_path
  end
 
  def destroy
    if request.delete?
      @<%= file_name %> = <%= class_name %>.find_by_id params[:id]

      if @<%= file_name %>
        flash[:notice] = '<%= singular_name.humanize.capitalize %> has been deleted'
        @<%= file_name %>.destroy
      end
    end

    redirect_to :back
  end
  
end