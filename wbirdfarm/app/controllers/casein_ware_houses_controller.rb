# Scaffolding generated by Casein v.2.0.6

class CaseinWareHousesController < CaseinController
 
  ## optional filters for defining usage according to casein_users access_levels
  # before_filter :needs_admin, :except => [:action1, :action2]
  # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
 
  def index
		if request.get?
			@casein_page_title = 'Ware houses'
			@ware_houses = WareHouse.paginate :all, :page => params[:page]
		end
  end
 
  def new
		if request.get?
			@casein_page_title = 'Add a new ware house'
    	@ware_house = WareHouse.new
		end
  end

  def create
    if request.post?
      @ware_house = WareHouse.new params[:ware_house]
      
      unless @ware_house.save
        flash[:warning] = 'There were problems when trying to create a new ware house'
        render :action => :new
        return
      end
      
      flash[:notice] = 'Ware house created'
    end
    redirect_to casein_ware_houses_path
  end
  
  def show
		if request.get?
   	 @ware_house = WareHouse.find params[:id]
    
	    if @ware_house.nil?
	      redirect_to casein_ware_houses_path
	    end

			@casein_page_title = 'View ware house'
		end
  end
 
  def update
    if request.put?
      @ware_house = WareHouse.find params[:id]

      if @ware_house
        @casein_page_title = 'Update ware house'

        unless @ware_house.update_attributes params[:ware_house]
          flash[:warning] = 'There were problems when trying to update this ware house'
          render :action => :show
          return
        end
        flash[:notice] = 'Ware house has been updated'
      end
    end

    redirect_to casein_ware_houses_path
  end
 
  def destroy
    if request.delete?
      @ware_house = WareHouse.find_by_id params[:id]

      if @ware_house
        flash[:notice] = 'Ware house has been deleted'
        @ware_house.destroy
      end
    end

    redirect_to :back
  end
  
end
